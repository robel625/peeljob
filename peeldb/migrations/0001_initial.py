# Generated by Django 4.2 on 2023-04-15 05:37

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import peeldb.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[("Enabled", "Enabled"), ("Disabled", "Disabled")],
                        default="Enabled",
                        max_length=10,
                    ),
                ),
                ("slug", models.SlugField(max_length=500)),
                ("internship_text", models.CharField(max_length=1000)),
                ("meta_title", models.TextField(default="")),
                ("meta_description", models.TextField(default="")),
                ("internship_meta_title", models.TextField(default="")),
                ("internship_meta_description", models.TextField(default="")),
                ("page_content", models.TextField(default="")),
                ("internship_content", models.TextField(default="")),
                ("meta", models.JSONField(default={})),
                (
                    "parent_city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_cities",
                        to="peeldb.city",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=5000)),
                ("website", models.CharField(blank=True, max_length=5000, null=True)),
                ("address", models.TextField()),
                (
                    "profile_pic",
                    models.FileField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        upload_to=peeldb.models.img_url,
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("1-10", "1-10"),
                            ("11-20", "11-20"),
                            ("21-50", "21-50"),
                            ("50-200", "50-200"),
                            ("200+", "200+"),
                        ],
                        default="",
                        max_length=10,
                    ),
                ),
                ("level", models.IntegerField(blank=True, null=True)),
                (
                    "company_type",
                    models.CharField(
                        choices=[("Consultant", "consultant"), ("Company", "company")],
                        default="",
                        max_length=50,
                    ),
                ),
                ("profile", models.TextField()),
                ("phone_number", models.CharField(max_length=15)),
                ("registered_date", models.DateField(auto_now_add=True)),
                ("email", models.EmailField(max_length=255, null=True)),
                ("short_code", models.CharField(max_length=50, null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("slug", models.SlugField(max_length=5000)),
                ("meta_title", models.TextField(default="")),
                ("meta_description", models.TextField(default="")),
                ("campaign_icon", models.CharField(max_length=3000, null=True)),
                ("created_from", models.CharField(default="", max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[("Enabled", "Enabled"), ("Disabled", "Disabled")],
                        default="Enabled",
                        max_length=10,
                    ),
                ),
                ("slug", models.SlugField(default="", max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="Degree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "degree_type",
                    models.CharField(
                        choices=[("Permanent", "Permanent"), ("PartTime", "PartTime")],
                        max_length=50,
                    ),
                ),
                ("specialization", models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="EmploymentHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company", models.CharField(max_length=500)),
                ("from_date", models.DateField(null=True)),
                ("to_date", models.DateField(blank=True, null=True)),
                ("designation", models.CharField(max_length=500)),
                ("salary", models.CharField(max_length=100)),
                ("current_job", models.BooleanField(default=False)),
                ("job_profile", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="FunctionalArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("InActive", "InActive")],
                        max_length=10,
                    ),
                ),
                ("slug", models.SlugField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="Industry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("InActive", "InActive")],
                        max_length=10,
                    ),
                ),
                ("slug", models.SlugField(max_length=500)),
                ("meta_title", models.TextField(default="")),
                ("meta_description", models.TextField(default="")),
                ("page_content", models.TextField(default="")),
            ],
        ),
        migrations.CreateModel(
            name="Keyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="Qualification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("InActive", "InActive")],
                        max_length=10,
                    ),
                ),
                ("slug", models.SlugField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("InActive", "InActive")],
                        max_length=10,
                    ),
                ),
                ("icon", models.CharField(max_length=1000)),
                ("slug", models.SlugField(max_length=500)),
                ("meta_title", models.TextField(default="")),
                ("meta_description", models.TextField(default="")),
                ("page_content", models.TextField(default="")),
                ("meta", models.JSONField(default={})),
                (
                    "skill_type",
                    models.CharField(
                        choices=[
                            ("it", "IT"),
                            ("non-it", "Non-IT"),
                            ("other", "Other"),
                        ],
                        default="it",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("read", models.BooleanField(default=False)),
                ("write", models.BooleanField(default=False)),
                ("speak", models.BooleanField(default=False)),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peeldb.language",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TechnicalSkill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(blank=True, null=True)),
                ("month", models.IntegerField(blank=True, null=True)),
                ("last_used", models.DateField(blank=True, null=True)),
                ("version", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Poor", "Poor"),
                            ("Average", "Average"),
                            ("Good", "Good"),
                            ("Expert", "Expert"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                ("is_major", models.BooleanField(default=False)),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="peeldb.skill"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[("Enabled", "Enabled"), ("Disabled", "Disabled")],
                        default="Enabled",
                        max_length=10,
                    ),
                ),
                ("slug", models.SlugField(default="", max_length=500)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="peeldb.country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                ("from_date", models.DateField(blank=True, null=True)),
                ("to_date", models.DateField(blank=True, null=True)),
                ("description", models.TextField(default="", max_length=2000)),
                ("role", models.CharField(blank=True, max_length=500, null=True)),
                ("size", models.IntegerField(blank=True, null=True)),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peeldb.city",
                    ),
                ),
                ("skills", models.ManyToManyField(to="peeldb.skill")),
            ],
        ),
        migrations.CreateModel(
            name="EducationInstitue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=500)),
                ("address", models.CharField(default="", max_length=2000)),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="peeldb.city"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EducationDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_date", models.DateField()),
                ("to_date", models.DateField(blank=True, null=True)),
                ("score", models.CharField(max_length=50)),
                ("current_education", models.BooleanField(default=False)),
                (
                    "degree",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="peeldb.degree"
                    ),
                ),
                (
                    "institute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peeldb.educationinstitue",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="degree",
            name="degree_name",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="peeldb.qualification"
            ),
        ),
        migrations.AddField(
            model_name="city",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="state",
                to="peeldb.state",
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(max_length=100, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "email",
                    models.EmailField(db_index=True, max_length=255, unique=True),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="staff status"),
                ),
                (
                    "profile_pic",
                    models.FileField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        upload_to=peeldb.models.img_url,
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("JS", "Job Seeker"),
                            ("RR", "Recruiter"),
                            ("RA", "Recruiter Admin"),
                            ("AA", "Agency Admin"),
                            ("AR", "Agency Recruiter"),
                        ],
                        default="",
                        max_length=10,
                    ),
                ),
                ("signature", models.CharField(default="", max_length=2000)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("F", "Female"), ("M", "Male")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("address", models.TextField(blank=True, max_length=1000, null=True)),
                (
                    "permanent_address",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
                ("nationality", models.TextField(blank=True, max_length=50, null=True)),
                ("mobile", models.CharField(blank=True, max_length=20, null=True)),
                ("alternate_mobile", models.BigIntegerField(blank=True, null=True)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("email_verified", models.BooleanField(default=False)),
                ("pincode", models.IntegerField(blank=True, null=True)),
                (
                    "last_password_reset_on",
                    models.DateTimeField(auto_now=True, null=True),
                ),
                ("photo", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "marital_status",
                    models.CharField(
                        blank=True,
                        choices=[("Single", "Single"), ("Married", "Married")],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("job_role", models.CharField(default="", max_length=500)),
                (
                    "current_salary",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "expected_salary",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                ("profile_description", models.CharField(default="", max_length=2000)),
                ("resume", models.CharField(default="", max_length=2000)),
                ("relocation", models.BooleanField(default=False)),
                (
                    "notice_period",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("year", models.CharField(blank=True, max_length=50, null=True)),
                ("month", models.CharField(default="", max_length=50)),
                ("show_email", models.BooleanField(default=False)),
                (
                    "resume_title",
                    models.TextField(blank=True, max_length=2000, null=True),
                ),
                ("resume_text", models.TextField(blank=True, null=True)),
                (
                    "mobile_verification_code",
                    models.CharField(default="", max_length=50),
                ),
                (
                    "last_mobile_code_verified_on",
                    models.DateTimeField(auto_now=True, null=True),
                ),
                ("mobile_verified", models.BooleanField(default=False)),
                ("is_login", models.BooleanField(default=False)),
                ("email_notifications", models.BooleanField(default=True)),
                ("profile_updated", models.DateTimeField(auto_now=True, null=True)),
                ("is_admin", models.BooleanField(default=False)),
                ("profile_completeness", models.CharField(default="", max_length=500)),
                (
                    "activation_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_register_through_mail", models.BooleanField(default=False)),
                (
                    "registered_from",
                    models.CharField(
                        choices=[
                            ("Email", "Email"),
                            ("Social", "Social"),
                            ("ResumePool", "ResumePool"),
                            ("Resume", "Resume"),
                            ("Careers", "Careers"),
                        ],
                        default="",
                        max_length=15,
                    ),
                ),
                ("is_unsubscribe", models.BooleanField(default=False)),
                ("is_bounce", models.BooleanField(default=False)),
                (
                    "unsubscribe_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("agency_admin", models.BooleanField(default=False)),
                ("referer", models.TextField(blank=True, null=True)),
                ("unsubscribe_reason", models.TextField(default="")),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_city",
                        to="peeldb.city",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peeldb.company",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peeldb.country",
                    ),
                ),
                (
                    "current_city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="current_city",
                        to="peeldb.city",
                    ),
                ),
                ("education", models.ManyToManyField(to="peeldb.educationdetails")),
                (
                    "employment_history",
                    models.ManyToManyField(to="peeldb.employmenthistory"),
                ),
                ("functional_area", models.ManyToManyField(to="peeldb.functionalarea")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "industry",
                    models.ManyToManyField(
                        related_name="recruiter_industries", to="peeldb.industry"
                    ),
                ),
                ("language", models.ManyToManyField(to="peeldb.userlanguage")),
                (
                    "prefered_industry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peeldb.industry",
                    ),
                ),
                (
                    "preferred_city",
                    models.ManyToManyField(
                        related_name="preferred_city", to="peeldb.city"
                    ),
                ),
                ("project", models.ManyToManyField(to="peeldb.project")),
                ("skills", models.ManyToManyField(to="peeldb.technicalskill")),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="peeldb.state",
                    ),
                ),
                (
                    "technical_skills",
                    models.ManyToManyField(
                        related_name="recruiter_skill", to="peeldb.skill"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("blog_view", "can view blog posts and categories"),
                    ("blog_edit", "can edit blog category and post"),
                    ("support_view", "can view tickets"),
                    ("support_edit", "can edit tickets"),
                    ("activity_view", "can view recruiters, applicants, data, posts"),
                    ("activity_edit", "can edit data"),
                    ("jobposts_edit", "can manage jobposts"),
                    ("jobposts_invoice_access", "can manage invoice"),
                    ("jobposts_resume_profiles", "can manage resume profiles"),
                ),
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
